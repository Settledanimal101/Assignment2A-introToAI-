import heapq

def cus2(start, goals):
    visited = set()
    expanded = []
    queue = []

    heapq.heappush(queue, (0, start, [start]))
    search_order = []

    while queue:
        total_cost, current, path = heapq.heappop(queue)

        if current in visited:
            continue

        visited.add(current)
        expanded.append(current)
        search_order.append(current)

        if current in goals:
            print("CUS2 Goal Reached:", current)
            print("Expanded Nodes:", expanded)
            print("Search Order:", search_order)
            print("Path:", path)
            print("Total Cost:", total_cost)
            return path, total_cost

        neighbors = sorted(graph.get(current, []), key=lambda x: x[0])
        for neighbor, cost in neighbors:
            if neighbor not in visited:
                heapq.heappush(queue, (total_cost + cost, neighbor, path + [neighbor]))

    print("CUS2: No path found.")
    return None, float('inf')
